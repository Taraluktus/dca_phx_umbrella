defmodule DcaPhx.Account.User do
  @moduledoc """
  Domain entity representing a user.
  """
  use Ash.Resource, domain: DcaPhx.Account, data_layer: Ash.DataLayer.Ets

  actions do
    # Use the default implementation of the :read action
    defaults [:read, :update, :create]

    default_accept [:username, :email]

    # and a create action, which we'll customize later
    # create :create do
    #   accept [:username, :email]
    # end

    update :disable do
      validate attribute_does_not_equal(:disabled, true) do
        message "User is already disabled"
      end

      change set_attribute(:disabled, true)
      # A custom change could be added like so:
      #
      # change MyCustomChange
      # change {MyCustomChange, opt: :val}
    end

    update :enable do
      accept []

      validate attribute_does_not_equal(:disabled, false) do
        message "User is already enabled"
      end

      change set_attribute(:disabled, false)
    end
  end

  attributes do
    # Add an autogenerated UUIDv7 primary key called :id
    uuid_v7_primary_key :id

    attribute :username, :string do
      allow_nil? false
      public? true
    end

    attribute :email, :string do
      public? true
    end

    attribute :disabled, :boolean do
      default false
    end
  end

  # relationships do
  #   has_many :roles, DcaPhx.Account.Role
  # end
end
